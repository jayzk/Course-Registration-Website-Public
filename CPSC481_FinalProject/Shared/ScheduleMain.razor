@using Microsoft.AspNetCore.Components.Web
@using System.Threading.Tasks

@using CPSC481_FinalProject.Shared
@inject IToastService toastService
@inject ICourseState CourseState
@inject ITermState termState
@implements IDisposable

@if (CourseState.selectedCourses.Contains(CourseList.GetCourse("CPSC 399")) &&
    CourseState.selectedCourses.Contains(CourseList.GetCourse("CPSC 481")) &&
    CourseState.selectedCourses.Contains(CourseList.GetCourse("SENG 300")) &&
    CourseState.Courses["CPSC 399"].IsVisible == true &&
    CourseState.Courses["CPSC 481"].IsVisible == true &&
    CourseState.Courses["SENG 300"].IsVisible == true)
{
    <div style="display: flex; justify-content: center; gap: 10px; padding-top: 200px; padding-right: 5px; ">
        <div class="d-flex m-5">
            <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
                </symbol>
            </svg>

            <div class="alert alert-danger d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
                <div>
                    CPSC 481, CPSC 399 and SENG 300 timings conflict. Please select another time.
                </div>
            </div>
        </div>
    </div>
}
else if (CourseState.selectedCourses.Contains(CourseList.GetCourse("CPSC 399")) && 
     CourseState.selectedCourses.Contains(CourseList.GetCourse("CPSC 481")) && 
     CourseState.Courses["CPSC 399"].IsVisible == true && 
     CourseState.Courses["CPSC 481"].IsVisible == true)
{
    <div style="display: flex; justify-content: center; gap: 10px; padding-top: 200px; padding-right: 5px; ">
        <div class="d-flex m-5">
            <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
                </symbol>
            </svg>

            <div class="alert alert-danger d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
                <div>
                    CPSC 481 and CPSC 399 timings conflict. Please select another time.

                </div>
            </div>
        </div>
    </div>
}
else if (CourseState.selectedCourses.Contains(CourseList.GetCourse("SENG 300")) &&
     CourseState.selectedCourses.Contains(CourseList.GetCourse("CPSC 481")) &&
     CourseState.Courses["SENG 300"].IsVisible == true &&
     CourseState.Courses["CPSC 481"].IsVisible == true)
{
    <div style="display: flex; justify-content: center; gap: 10px; padding-top: 200px; padding-right: 5px; ">
        <div class="d-flex m-5">
            <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
                </symbol>
            </svg>

            <div class="alert alert-danger d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
                <div>
                    CPSC 481 and SENG 300 timings conflict. Please select another time.

                </div>
            </div>
        </div>
    </div>
}
else if (CourseState.selectedCourses.Contains(CourseList.GetCourse("SENG 300")) &&
     CourseState.selectedCourses.Contains(CourseList.GetCourse("CPSC 399")) &&
     CourseState.Courses["SENG 300"].IsVisible == true &&
     CourseState.Courses["CPSC 399"].IsVisible == true)
{
    <div style="display: flex; justify-content: center; gap: 10px; padding-top: 200px; padding-right: 5px; ">
        <div class="d-flex m-5">
            <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
                </symbol>
            </svg>

            <div class="alert alert-danger d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
                <div>
                    CPSC 399 and SENG 300 timings conflict. Please select another time.

                </div>
            </div>
        </div>
    </div>
}
else if (CourseState.selectedCourses.Contains(CourseList.GetCourse("CPSC 449")) && !CourseState.Courses["CPSC 449"].checkedTime2 && 
         CourseState.Courses["CPSC 449"].IsVisible && (CourseState.Courses["CPSC 449"].isBlocked1 || CourseState.Courses["CPSC 449"].isBlocked2))
{
    <div style="display: flex; justify-content: center; gap: 10px; padding-top: 200px; padding-right: 5px; ">
        <div class="d-flex m-5">
            <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
                </symbol>
            </svg>

            <div class="alert alert-danger d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
                <div>
                    All CPSC 449 timings conflict with personal timings

                </div>
            </div>
        </div>
    </div>
}

else
{
    <div style="display: flex; justify-content: flex-end; gap: 10px; padding-top: 5px; padding-right: 5px; ">
        <button type="button" class="btn btn-img m-0" style="width: 45px; height: 10px;" data-bs-toggle="modal" data-bs-target="#helpModal">
            <span class="material-symbols-outlined" id="filled" style="color:#6c757d; font-size: 2em; margin-top: -4px">
                help
            </span>
        </button>

        <!-- Modal -->
        <div class="modal fade" id="helpModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal" tabindex="-1" role="dialog"></div>
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title " id="exampleModalLabel">Tip</h5>
                        <button type="button " class="btn-close " data-bs-dismiss="modal" aria-label="Close" ></button>
                    </div>

                    <div class="modal-body">
                        <div class="flex-container">
                                <a>
                                    <div style="display: flex; justify-content: center; align-items: center;">
                                    <img src="TipImage.png" width="378" height="180" style="justify-content: center;">
                                    </div>
                                </a>
                                <label class="form-check-label" for="flexCheckDefault">
                                    You can click on a time slot in the schedule to block it out, preventing classes scheduled during the blocked times from being selected. 
                                    <br>
                                    Try this feature by selecting a time slot on Thursday, between 8:00AM and 11:00AM.
                                </label>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>


        <!-- Button trigger modal -->
        <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#saveModal">
            Save Schedule
        </button>

        <!-- Modal -->
        <div class="modal fade" id="saveModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Save Schedule</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="d-flex">
                        <div class="modal-body">
                            Enter Schedule Name:
                        </div>
                        <div class="input-group input-group-lg mb-3 mt-3">
                            <input type="text" class="form-control" placeholder="" @bind="scheduleName" @oninput="OnInputEvent"
                                   aria-label="saveSchedule" aria-describedby="basic-addon1" style="font-size: 15px; margin-right: 10px;">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="SaveSchedule">Save</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="dropdown">
            <button type="button" class="btn btn-secondary dropdown-toggle" id="dropdown-schedule"
                    data-bs-toggle="dropdown" aria-expanded="false">
                Load Schedule(s)
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdown-schedule">
                @if(savedSchedules != null)
                {
                    @foreach(var schedule in savedSchedules)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <a class="dropdown-item" href="" data-bs-toggle="modal" data-bs-target="#unsuportedLoadScheduleModal">@schedule</a>

                            <button type="button" class="btn btn-img" @onclick="() => RemoveSchedule(schedule)"
                                    style="position: absolute; top: 10%; right: 12%; z-index: 100; object-fit: cover; max-width: 12%; max-height: 12%;">
                                <span class="material-symbols-outlined" id="filled" style = "color: rgb(180, 23, 23);">
                                    close
                                </span>
                            </button>
                        </li>
                    }
                }
            </ul>
        </div>

        <!-- Modal -->
        <div class="modal fade" id="unsuportedLoadScheduleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal" tabindex="-1" role="dialog"></div>
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title " id="exampleModalLabel">Warning</h5>
                        <button type="button " class="btn-close " data-bs-dismiss="modal" aria-label="Close" ></button>
                    </div>
                    <div class="modal-body">
                        <div class="flex-container">
                            Loading schedules is currently under development
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Okay</button>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div style="display: flex; justify-content: center; gap: 10px; align-items: center; padding-top: 10px;">
        <button type="button" class="btn btn-secondary" @onclick="leftButton">&larr;</button>
        @if (CourseState.Courses["CPSC 449"].IsVisible == true &&
       CourseState.selectedCourses.Contains(CourseList.GetCourse("CPSC 449")) &&
       CourseState.Courses["CPSC 449"].checkedTime1 &&
       CourseState.Courses["CPSC 449"].checkedTime2)
        {
            <div>@($"View Schedule {possibilityValue} out of 2")</div>
        }
        else
        {
            <div>View Schedule 1 out of 1</div>
        }
        <button type="button" class="btn btn-secondary" @onclick="rightButton">&rarr;</button>
    </div>

    <div style="position: relative; padding-left: 20px; padding-right: 20px;" class="timetable_part" aria-hidden="true">
        <div class="timezoneAbbr">&nbsp;</div>
        <div class="timetable table_container" style="max-width: 120vw; margin: 0 auto !important; float: none !important;">
            <div style="position: relative">
                <div class="weekArea">
                    <table cellpadding="0" cellspacing="0">
                        <tbody>
                            <tr class="header tall">
                                <td>
                                    Mon <span class="day_2_date">
                                    </span>
                                </td>
                                <td>
                                    Tue <span class="day_3_date">
                                    </span>
                                </td>
                                <td>
                                    Wed <span class="day_4_date">
                                    </span>
                                </td>
                                <td>
                                    Thu <span class="day_5_date">
                                    </span>
                                </td>
                                <td>
                                    Fri <span class="day_6_date">
                                    </span>
                                </td>
                            </tr>
                            <tr class="even">
                                <td>
                                    <div class="left_fade">
                                        <div class="hour_marker">8</div>
                                        <div class="min_marker">am</div>
                                    </div>
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="odd">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="even">
                                <td>
                                    <div class="left_fade">
                                        <div class="hour_marker">9</div>
                                        <div class="min_marker">am</div>
                                    </div>
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="odd">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="even">
                                <td>
                                    <div class="left_fade">
                                        <div class="hour_marker">10</div>
                                        <div class="min_marker">am</div>
                                    </div>
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="odd">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="even">
                                <td>
                                    <div class="left_fade">
                                        <div class="hour_marker">11</div>
                                        <div class="min_marker">am</div>
                                    </div>
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="odd">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="even">
                                <td>
                                    <div class="left_fade">
                                        <div class="hour_marker">12</div>
                                        <div class="min_marker">pm</div>
                                    </div>
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="odd">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="even">
                                <td>
                                    <div class="left_fade">
                                        <div class="hour_marker">1</div>
                                        <div class="min_marker">pm</div>
                                    </div>
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="odd">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="even">
                                <td>
                                    <div class="left_fade">
                                        <div class="hour_marker">2</div>
                                        <div class="min_marker">pm</div>
                                    </div>
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="odd">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="even">
                                <td>
                                    <div class="left_fade">
                                        <div class="hour_marker">3</div>
                                        <div class="min_marker">pm</div>
                                    </div>
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="odd">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="even">
                                <td>
                                    <div class="left_fade">
                                        <div class="hour_marker">4</div>
                                        <div class="min_marker">pm</div>
                                    </div>
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="odd">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="even">
                                <td>
                                    <div class="left_fade">
                                        <div class="hour_marker">5</div>
                                        <div class="min_marker">pm</div>
                                    </div>
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="odd">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="even">
                                <td>
                                    <div class="left_fade">
                                        <div class="hour_marker">6</div>
                                        <div class="min_marker">pm</div>
                                    </div>
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr class="odd">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="weekTimes" style="position: absolute; display: block; top: 0px; left: 0px; width: 100%; height: 100%;">

                    <div class="busy_blocks">
                        <div class="thublock">
                            <div class="busy_block" classname="busy_block" @onclick="@ToggleVisibility1" style="@($"opacity: {Visibility1};") left: 60%; top: 22px; width: 20%; height: 36px; z-index: 100;"></div>
                            <div class="busy_block" classname="busy_block" @onclick="@ToggleVisibility2" style="@($"opacity: {Visibility2};") left: 60%; top: 58px; width: 20%; height: 36px; z-index: 100;"></div>
                            <div class="busy_block" classname="busy_block" @onclick="@ToggleVisibility3" style="@($"opacity: {Visibility3};") left: 60%; top: 94px; width: 20%; height: 36px; z-index: 100;"></div>
                            <div class="busy_block" classname="busy_block" @onclick="@ToggleVisibility4" style="@($"opacity: {Visibility4};") left: 60%; top: 130px; width: 20%; height: 36px; z-index: 100;"></div>
                        </div>
                    </div>

                    @*
                // courses formatting guidelines
                // dates
                // M: left: 0%, T: left 20%, W: left 40% ...
                // hours (whole)
                // 8:00am: top: 22px, 9:00am: top 58px, 10:00am: top 94px ...
                // 8:30am: top: 36px, 9:30am: top 72px, 10:30am: top 108px ...
                // durations
                // 50mins: height: 29px, 1hr: height 36px, 1hr 50mins: height 65px
                // 15 mins: height: 9px, 30 mins: height 18px, 45 mins: height 27px
                *@

                    @if (CourseState.Courses["SENG 300"].IsVisible == true &&
                   CourseState.selectedCourses.Contains(CourseList.GetCourse("SENG 300")) &&
                   CourseState.Courses["SENG 300"].checkedTime1)
                    {
                        <div class="CPSC_300_Times">
                            <div class="time_block seng300" style="left: 0%; top: 94px; width: 20%; height: 29px;">
                                <span class="nonmobile">SENG 300 <br>LEC 01 </span>
                            </div>

                            <div class="time_block seng300" style="left: 40%; top: 94px; width: 20%; height: 29px;">
                                <span class="nonmobile">SENG 300 <br>LEC 01 </span>
                            </div>

                            <div class="time_block seng300" style="left: 80%; top: 94px; width: 20%; height: 29px;">
                                <span class="nonmobile">SENG 300 <br>LEC 01 </span>
                            </div>

                            <div class="time_block seng300" style="left: 20%; top: 58px; width: 20%; height: 65px;">
                                <span class="nonmobile">SENG 300 <br>TUT 01 </span>
                            </div>
                        </div>
                    }

                    @if (CourseState.Courses["ASPH 305"].IsVisible == true &&
                   CourseState.selectedCourses.Contains(CourseList.GetCourse("ASPH 305")) &&
                   CourseState.Courses["ASPH 305"].checkedTime1)
                    {
                        <div class="ASPH_305_Times">
                            <div class="time_block asph305" style="left: 20%; top: 166px; width: 20%; height: 101px;">
                                <span class="nonmobile">ASPH 305 <br>LEC 01 </span>
                            </div>

                            <div class="time_block asph305" style="left: 60%; top: 166px; width: 20%; height: 101px;">
                                <span class="nonmobile">ASPH 305 <br>LEC 01 </span>
                            </div>

                            @if (!labVisible)
                            {
                                <div class="time_block asph305" style="left: 80%; top: 346px; width: 20%; height: 65px;">
                                    <span class="nonmobile">ASPH 305 <br>TUT 01 </span>
                                </div>
                            }
                        </div>
                    }

                    @if (CourseState.Courses["CPSC 449"].IsVisible == true &&
                   CourseState.selectedCourses.Contains(CourseList.GetCourse("CPSC 449")) == true &&
                   (CourseState.Courses["CPSC 449"].checkedTime1 || CourseState.Courses["CPSC 449"].checkedTime2))
                    {
                        <div class="CPSC_449_Times">
                            <div class="time_block cpsc449" style="left: 0%; top: 166px; width: 20%; height: 29px;">
                                <span class="nonmobile">CPSC 449 <br>LEC 01 </span>
                            </div>

                            <div class="time_block cpsc449" style="left: 40%; top: 166px; width: 20%; height: 29px;">
                                <span class="nonmobile">CPSC 449 <br>LEC 01 </span>
                            </div>

                            <div class="time_block cpsc449" style="left: 80%; top: 166px; width: 20%; height: 29px;">
                                <span class="nonmobile">CPSC 449 <br>LEC 01 </span>
                            </div>

                            @if (!CourseState.Courses["CPSC 449"].alternateLab && CourseState.Courses["CPSC 449"].checkedTime1 &&
                           (!CourseState.Courses["CPSC 449"].isBlocked1 && !CourseState.Courses["CPSC 449"].isBlocked2))
                            {
                                <div class="time_block cpsc449" style="left: 60%; top: 58px; width: 20%; height: 65px;">
                                    <span class="nonmobile">CPSC 449 <br>TUT 01 </span>
                                </div>
                            }
                            else if (CourseState.Courses["CPSC 449"].checkedTime2)
                            {
                                <div class="time_block cpsc449" style="left: 40%; top: 238px; width: 20%; height: 65px;">
                                    <span class="nonmobile">CPSC 449 <br>TUT 02 </span>
                                </div>
                            }
                        </div>
                    }

                    @if (CourseState.Courses["CPSC 481"].IsVisible == true &&
                   CourseState.selectedCourses.Contains(CourseList.GetCourse("CPSC 481")) &&
                   CourseState.Courses["CPSC 481"].checkedTime1)
                    {
                        <div class="CPSC_481_Times">
                            <div class="time_block cpsc481" style="left: 0%; top: 94px; width: 20%; height: 29px;">
                                <span class="nonmobile">CPSC 481 <br>LEC 01 </span>
                            </div>

                            <div class="time_block cpsc481" style="left: 40%; top: 94px; width: 20%; height: 29px;">
                                <span class="nonmobile">CPSC 481 <br>LEC 01 </span>
                            </div>

                            <div class="time_block cpsc481" style="left: 80%; top: 94px; width: 20%; height: 29px;">
                                <span class="nonmobile">CPSC 481 <br>LEC 01 </span>
                            </div>

                            <div class="time_block cpsc481" style="left: 20%; top: 58px; width: 20%; height: 65px;">
                                <span class="nonmobile">CPSC 481 <br>TUT 01 </span>
                            </div>
                        </div>
                    }

                    @if (CourseState.Courses["ASTR 209"].IsVisible == true &&
                   CourseState.selectedCourses.Contains(CourseList.GetCourse("ASTR 209")) &&
                   CourseState.Courses["ASTR 209"].checkedTime1)
                    {
                        <div class="ASTR_209_Times">

                            <div class="time_block astr209" style="left: 0%; top: 202px; width: 20%; height: 29px;">
                                <span class="nonmobile">ASTR 209 <br>LEC 01 </span>
                            </div>

                            <div class="time_block astr209" style="left: 40%; top: 202px; width: 20%; height: 29px;">
                                <span class="nonmobile">ASTR 209 <br>LEC 01 </span>
                            </div>

                            <div class="time_block astr209" style="left: 80%; top: 202px; width: 20%; height: 29px;">
                                <span class="nonmobile">ASTR 209 <br>LEC 01 </span>
                            </div>

                        </div>
                    }

                    @if (CourseState.Courses["CPSC 399"].IsVisible == true &&
                   CourseState.selectedCourses.Contains(CourseList.GetCourse("CPSC 399")) &&
                   CourseState.Courses["CPSC 399"].checkedTime1)
                    {
                        <div class="CPSC_300_Times">
                            <div class="time_block cpsc399" style="left: 0%; top: 94px; width: 20%; height: 29px;">
                                <span class="nonmobile">CPSC 399 <br>LEC 01 </span>
                            </div>

                            <div class="time_block cpsc399" style="left: 40%; top: 94px; width: 20%; height: 29px;">
                                <span class="nonmobile">CPSC 399 <br>LEC 01 </span>
                            </div>

                            <div class="time_block cpsc399" style="left: 80%; top: 94px; width: 20%; height: 29px;">
                                <span class="nonmobile">CPSC 399 <br>LEC 01 </span>
                            </div>

                        </div>
                    }

                    @if (CourseState.Courses["GEOG 280"].IsVisible == true &&
                   CourseState.selectedCourses.Contains(CourseList.GetCourse("GEOG 280")) &&
                   CourseState.Courses["GEOG 280"].checkedTime1)
                    {
                        <div class="GEOG_280_Times">
                            <div class="time_block geog280" style="left: 20%; top: 310px; width: 20%; height: 65px;">
                                <span class="nonmobile">GEOG 280 <br>LEC 01 </span>
                            </div>

                            <div class="time_block geog280" style="left: 60%; top: 310px; width: 20%; height: 65px;">
                                <span class="nonmobile">GEOG 280 <br>LEC 01 </span>
                            </div>

                            @if (!alternateGEOG280Lab && CourseState.Courses["GEOG 280"].checkedTime1)
                            {
                                <div class="time_block geog280" style="left: 00%; top: 310px; width: 20%; height: 29px;">
                                    <span class="nonmobile">GEOG 280 <br>TUT 01 </span>
                                </div>
                            }
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>

    <div class="sliderdiv timetable_part" aria-hidden="true" style="position: relative; padding-top: 20px; padding-bottom: 5px">
        <div style="text-align:center;">
            <label>
                @if (termState.getTermState() == "Fall 2023")
                {
                    <span class="disp_days">@dateTitle2</span>
                } else
                {
                    <span class="disp_days">@dateTitle</span>
                }
            </label>
        </div>
        <div style="display: flex; justify-content: center; gap: 20px; align-items: center;">
            <button type="button" class="btn btn-secondary" @onclick="HandleLeftButtonClick">&larr;</button>
            <input type="range" class="form-range" min="50" max="115" step="5" id="customRange3" style="width: 50%;" @oninput="HandleRangeInput" @bind-value="rangeValue" />
            <button type="button" class="btn btn-secondary" @onclick="HandleRightButtonClick">&rarr;</button>
        </div>
    </div>

    <div style="padding-top: 10px;">
        @if (termState.getTermState() == "Winter 2023")
        {
            @if (ShouldShowAntireq())
            {
                <div style="text-align: center;">
                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#AntiRequisiteModal">
                        Get this Schedule
                    </button>
                </div>
            }
            else if (ShouldShowEmpty())
            {
                <div style="text-align: center;">
                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#EmptyModal">
                        Get this Schedule
                    </button>
                </div>
            }
            else
            {
                <EnrollmentPopup />
            }
        }
        else if(termState.getTermState() == "Fall 2023")
        {
            <div style="text-align: center;">
                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#notEnrollmentDate" @onclick="() => CourseState.ForceUpdate()" style="opacity: .65;">
                    Get this schedule
                </button>
            </div>
            <div class="modal fade" id="notEnrollmentDate" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="noChangeLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="noChangeLabel">
                                Error
                            </h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="flex-container">
                                <label>
                                    You cannot enroll for courses Fall 2023 because it is before your enrollment date. Your enrollment date for Fall 2023 is May 7th 10:30AM.
                               </label>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Okay</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Antireq Modal -->
    <div class="modal fade" id="AntiRequisiteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal" tabindex="-1" role="dialog"></div>
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title " id="exampleModalLabel">Error</h5>
                    <button type="button" class="btn-close " data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <div class="flex-container">
                        <label>
                            Antirequisite Conflict, the following courses are incompatible:
                        </label>
                        <label>
                            &nbsp - ASPH 305 has the antirequisite ASTR 209
                        </label><br /><br />
                        <label>
                            <em> To resolve this, remove one of the incompatible courses. </em>
                        </label>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Empty List Modal -->
    <div class="modal fade" id="EmptyModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal" tabindex="-1" role="dialog"></div>
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title " id="exampleModalLabel">Error</h5>
                    <button type="button" class="btn-close " data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <div class="flex-container">
                        <label>
                            You have no courses added, to add courses:
                        </label><br />
                        <label>
                            - Use the Course Search bar to browse courses
                        </label>
                        <label>
                            - Add courses directly from your Degree Requirements
                        </label>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@code{
    private bool labVisible = true;
    private bool alternateCPSC449Lab = false;
    private bool alternateGEOG280Lab = false;

    private int previousValue = 50;
    private int positionValue = 0;
    private int possibilityValue = 1;
    private string? scheduleName;

    private string dateTitle = "Jan 8, 2023 - Jan, 14 2023";
    private string dateTitle2 = "Sep 5, 2023 - Sep 11, 2023";
    private string previousTerm = "Winter 2023";

    public bool course1visible = false;

    private List<CourseData> courses;
    private List<String>? savedSchedules;

    private int rangeValue = 50;

    private bool ShouldShowAntireq()
    {
        return CourseState.Courses["ASPH 305"] != null && CourseState.selectedCourses.Contains(CourseList.GetCourse("ASPH 305")) &&
               CourseState.Courses["ASTR 209"] != null && CourseState.selectedCourses.Contains(CourseList.GetCourse("ASTR 209"));
    }

    private bool ShouldShowEmpty()
    {
        return CourseState.selectedCourses.Count() == 0;
    }

    private void rightButton()
    {
        if (CourseState.Courses["CPSC 449"].IsVisible == true && CourseState.selectedCourses.Contains(CourseList.GetCourse("CPSC 449")) && CourseState.Courses["CPSC 449"].checkedTime2 == true)
        {
            possibilityValue = 2;
            //alternateCPSC449Lab = true;
            CourseState.Courses["CPSC 449"].alternateLab = true;
            CourseState.Courses["CPSC 449"].isFirstTime = false;

            CourseState.ForceUpdate();
        }
    }
    private void leftButton()
    {
        if (CourseState.Courses["CPSC 449"].IsVisible == true && CourseState.selectedCourses.Contains(CourseList.GetCourse("CPSC 449")) && CourseState.Courses["CPSC 449"].checkedTime2 == true)
        {
            possibilityValue = 1;
            //alternateCPSC449Lab = false;
            CourseState.Courses["CPSC 449"].alternateLab = false;
            CourseState.Courses["CPSC 449"].isFirstTime = true;

            CourseState.ForceUpdate();
        }
    }

    private void HandleLeftButtonClick()
    {
        if (rangeValue > 50)
        {
            rangeValue -= 5;
            HandleRangeInput(new ChangeEventArgs { Value = rangeValue });
        }
    }

    private void HandleRightButtonClick()
    {
        if (rangeValue < 115)
        {
            rangeValue += 5;
            HandleRangeInput(new ChangeEventArgs { Value = rangeValue });
        }
    }

    protected override void OnInitialized()
    {

        savedSchedules = new List<string>();
        courses = CourseList.GetList();
        CourseState.OnCourseStateChanged += StateHasChanged;

    }

    // Ensure that there are no memory leaks
    public void Dispose()
    {
        CourseState.OnCourseStateChanged -= StateHasChanged;
    }

    private async Task HandleRangeInput(ChangeEventArgs e){

        // this one just toggles the lab back and forth
        labVisible = !labVisible;

        // check if the slider is going backwards or forwards
        if (int.Parse(e.Value.ToString()) < previousValue){
            positionValue -= 1;
        }
        else{
            positionValue += 1;
        }

        if (termState.getTermState() == "Winter 2023")
        {
            if (int.Parse(e.Value.ToString()) == 50)
            {
                dateTitle = "Jan 8, 2023 - Jan, 14 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 55)
            {
                dateTitle = "Jan 15, 2023 - Jan 21, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 60)
            {
                dateTitle = "Jan 22, 2023 - Jan 28, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 65)
            {
                dateTitle = "Jan 29, 2023 - Feb 4, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 70)
            {
                dateTitle = "Feb 5, 2023 - Feb 11, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 75)
            {
                dateTitle = "Feb 12, 2023 - Feb 18, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 80)
            {
                dateTitle = "Feb 19, 2023 - Feb 25, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 85)
            {
                dateTitle = "Feb 26, 2023 - Mar 4, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 90)
            {
                dateTitle = "Mar 5, 2023 - Mar 11, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 95)
            {
                dateTitle = "Mar 12, 2023 - Mar 18, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 100)
            {
                dateTitle = "Mar 19, 2023 - Mar 25, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 105)
            {
                dateTitle = "Mar 26, 2023 - Apr 1, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 110)
            {
                dateTitle = "Apr 2, 2023 - Apr 8, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 115)
            {
                dateTitle = "Apr 9, 2023 - Apr 15, 2023";
            }
        } else
        {
            if (int.Parse(e.Value.ToString()) == 50)
            {
                dateTitle2 = "Sep 5, 2023 - Sep 11, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 55)
            {
                dateTitle2 = "Sep 12, 2023 - Sep 18, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 60)
            {
                dateTitle2 = "Sep 19, 2023 - Sep 25, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 65)
            {
                dateTitle2 = "Sep 26, 2023 - Oct 2, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 70)
            {
                dateTitle2 = "Oct 3, 2023 - Oct 9, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 75)
            {
                dateTitle2 = "Oct 10, 2023 - Oct 16, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 80)
            {
                dateTitle2 = "Oct 17, 2023 - Oct 23, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 85)
            {
                dateTitle2 = "Oct 24, 2023 - Oct 30, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 90)
            {
                dateTitle2 = "Oct 31, 2023 - Nov 6, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 95)
            {
                dateTitle2 = "Nov 7, 2023 - Nov 13, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 100)
            {
                dateTitle2 = "Nov 14, 2023 - Nov 20, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 105)
            {
                dateTitle2 = "Nov 21, 2023 - Nov 27, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 110)
            {
                dateTitle2 = "Nov 28, 2023 - Dec 4, 2023";
            }
            else if (int.Parse(e.Value.ToString()) == 115)
            {
                dateTitle2 = "Dec 5, 2023 - Dec 11, 2023";
            }
        }
    }

    private double Visibility1 = 0;
    private double Visibility2 = 0;
    private double Visibility3 = 0;
    private double Visibility4 = 0;

    private void ToggleVisibility1()
    {
        if (Visibility1 == 0.5)
        {
            Visibility1 = 0;
        }
        else
        {
            Visibility1 = 0.5;
        }
    }

    private void ToggleVisibility2()
    {
        if (Visibility2 == 0.5)
        {
            Visibility2 = 0;
            CourseState.Courses["CPSC 449"].isBlocked1 = false;
            CourseState.Courses["CPSC 449"].checkedTime1 = true;
            CourseState.Courses["CPSC 449"].isFirstTime = true;
        }
        else
        {
            Visibility2 = 0.5;
            CourseState.Courses["CPSC 449"].isBlocked1 = true;
            CourseState.Courses["CPSC 449"].checkedTime1 = false;
            CourseState.Courses["CPSC 449"].isFirstTime = false;
        }

        CourseState.ForceUpdate();
    }

    private void ToggleVisibility3()
    {
        if (Visibility3 == 0.5) //unblocking time block
        {
            Visibility3 = 0;
            CourseState.Courses["CPSC 449"].isBlocked2 = false;
            CourseState.Courses["CPSC 449"].checkedTime1 = true;
            CourseState.Courses["CPSC 449"].isFirstTime = true;
        }
        else //blocking time block
        {
            Visibility3 = 0.5;
            CourseState.Courses["CPSC 449"].isBlocked2 = true;
            CourseState.Courses["CPSC 449"].checkedTime1 = false;
            CourseState.Courses["CPSC 449"].isFirstTime = false;
        }

        CourseState.ForceUpdate();
    }

    private void ToggleVisibility4()
    {
        if (Visibility4 == 0.5)
        {
            Visibility4 = 0;
        }
        else
        {
            Visibility4 = 0.5;
        }
    }

    private void OnInputEvent(ChangeEventArgs changeEvent)
    {
        scheduleName = (string)changeEvent.Value;
    }

    private void SaveSchedule()
    {
        if(!string.IsNullOrEmpty(scheduleName)) {
            savedSchedules.Add(scheduleName);
            toastService.ShowSuccess("Saved schedule: " + scheduleName);
        }
        else
            toastService.ShowError("Please enter a schedule name");
    }

    private void RemoveSchedule(string name)
    {
        savedSchedules.Remove(name);
        toastService.ShowInfo("Removed schedule: " + name);
    }
}
